name: ci

on:
  push:
    tags:
      - "*"

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            zzkk/user-service-api
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
  helmRelease:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      #repository-projects: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: .user-service-api
          
      - name: Checkout Helm chart repo
        uses: actions/checkout@v2
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          repository: zkooli/charts
          path: .charts-repo
          ref: gh-pages
          fetch-depth: 0
          
      - name: Configure Git
        run: |
          git config --global user.name "$GITHUB_ACTOR"
          git config --global user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install chart releaser
        run: |
          set -e
          arch="$(dpkg --print-architecture)"
          curl -s https://api.github.com/repos/helm/chart-releaser/releases/latest \
          | yq --indent 0 --no-colors --input-format json --unwrapScalar \
            ".assets[] | select(.name | test("\""^chart-releaser_.+_linux_${arch}\.tar\.gz$"\"")) | .browser_download_url" \
          | xargs curl -SsL \
          | tar zxf - -C /usr/local/bin
          
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.1

      - name: custom packaging
        working-directory: .user-service-api
        run: |
          VERSION=${{github.ref_name}}
          rm -rf .cr-release-packages
          mkdir -p .cr-release-packages
          helm package charts/user-service-api-chart --app-version=${VERSION:1} --version=${VERSION:1} --destination=.cr-release-packages

      - name: Run chart-releaser
        # switch back to helm/chart-releaser-action if this contribution is ever merged
        uses: helm/chart-releaser-action@v1.5.0
        with:
          skip_packaging: true

        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          
      - name: Update charts index
        working-directory: .charts-repo
        run: |
          set -ex
          owner=$(cut -d '/' -f 1 <<< '${{ github.repository }}')
          repo=$(cut -d '/' -f 2 <<< '${{ github.repository }}')
          cr index --git-repo "$repo" --owner "$owner" --pages-branch 'gh-pages' \
            --package-path '../.user-service-api/.cr-release-packages' \
            --index-path ./  --push
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_SKIP_EXISTING: true
          CR_OWNER: zkooli
          CR_GIT_REPO: charts
  
